=> Planning Statge

Step 1) Draw All Views
1) Decks List:
- Display the title of each deck
- Display number of cards in each deck

2) Add Deck:
- Input for the title
- Button to submit

3) Deck View:
- Title of the deck
- Number of the cards
- An option to start a quiz
- An option to add a new card

4) Add Card:
- Option to enter the question
- Option to enter the answer
- Button to submit

5) Quiz View
- Displays a card question
- Option to view the answer (flips the card)
- a “Correct” button
- an “Incorrect” button
- the number of cards left in the quiz
- Displays the percentage correct once the quiz is complete

Step2) Break each view into a hierarchy of components
1) DecksList
-(title, number of cards)

2) AddDeck
-(form with two inputs)

3) DeckView
4) AddCard
5) Quiz

Step 3) What events happen in the app
*Actions
a) getDecks(take decks)
b) addDeck(take deck title)
c) addCard
d) Take a quiz

Step 4) What data lives in the store
Decks(titles and cards)



---
=> Database
* Use AsyncStorage :import AsyncStorage from '@react-native-community/async-storage';
- We will have 4 methods: getDecks(return all), getDeck(take Id), saveDeckTitle(take Title & add it to list), addCardToDeck(take title & card)

=> Notes:
I need middleware if I am using redux

=>Common problems
1)when handleInitialData doesn't work you need to check that you have put a conditon
like {decks && Object.values()} and  if(!deck){return < no deck >}


2) onPress={() => this.deleteDeckFunc(title)}

--
=> Filter for Objects:
Object.filter = (obj, predicate) => 
    Object.keys(obj)
          .filter( key => predicate(obj[key]) )
          .reduce( (res, key) => (res[key] = obj[key], res), {} );

OR**
case DELETE_DECK :
// brilliant
const title = action.title
const { [title]: value, ...rest } = state
return rest 


=> Navigation
To Pass something to a component: https://stackoverflow.com/questions/45109872/passing-data-using-react-native-navigation

from the parent:
onPress={() => this.props.navigation.navigate('Child', {title: deck.title})}

to the child:
function child( {route})

const {title} = route.params

IF its a class => title: this.props.route.params.user.name,


- A Library for navigation
https://reactnavigation.org/blog/2020/01/29/using-react-navigation-5-with-react-native-paper/